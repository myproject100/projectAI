import React, { useState, useCallback, useMemo } from 'react'
import { withHistory } from 'slate-history'
import {withReact } from 'slate-react'
import {
  createEditor
} from 'slate'

import Head from "next/head";
import Image from "next/image";

import TextEditor from "../components/home/textEditor/TextEditor";
import TextOutput from "../components/home/textOutput/richtext";

import styles from './styles.module.scss'
export default function Home() {
  const OpenAI = require("openai-api");

  // Load your key from an environment variable or secret management service
  // (do not include your key directly in your code)
  const OPENAI_API_KEY = "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";

  const openai = new OpenAI(OPENAI_API_KEY);

  const [outPut, setOutPut] = useState("");

  const [playgroundText, setPlaygroundText] = useState("");
  const [maxTokens, setMaxTokens] = useState(100);
  const [tags, setTags] = useState([]);
  const editor = useMemo(() => withHistory(withReact(createEditor())), [])
  
  const dummy  = [
    {
      type: 'paragraph',
      children: [
        { text: 'Start typing in your own words', italic: true, bold: true },
      
      ],
    },
    
  ]
  const [initialValue, setInitialValue] = useState(dummy)

  
  const submitAI = async () => {
    let gptResponse;
    let promptText = playgroundText;

    if (tags.length > 0) {
      promptText += " with keyword:";
      tags.map((tag, index) => (promptText += " " + tag));
    }
   console.log('submitAI==== ', promptText)

    // (async () => {
       gptResponse = await openai.complete({
        engine: "text-davinci-002",
        prompt: promptText,
        temperature: 0.7,
        max_tokens: maxTokens,
        top_p: 1,
        frequency_penalty: 0,
        presence_penalty: 0,
      });
       console.log("===", gptResponse.data);
      setOutPut(gptResponse.data.choices[0].text);
    // })();
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container-fluid p-0">
      <div className="pt-5">
        <div className={`${styles.border} row`}>
          <div className={`col-4 ${styles.leftSide}`}>
          <h1>Long form document</h1>
            <TextEditor
              submitAI={submitAI}
              tags={tags}
              setTags={setTags}
            
              setPlaygroundText={setPlaygroundText}
              setMaxTokens={setMaxTokens}
              maxTokens={maxTokens}
              output={outPut}
         
              editor={editor}
            />
           
          </div>
          <div className="col-8">
            <TextOutput initialValue={initialValue} editor={editor}   />
            
          </div>
        </div>
        </div>
      </main>
    </div>
  );
}
